version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - 'echo Installing dependencies for testing...'
      - 'node --version'
      - 'npm --version'
      - 'npm install'

  pre_build:
    commands:
      - 'echo Setting up test environment...'
      - 'export CI=true'
      - |
        # Construct DATABASE_URL from environment variables set by secrets-manager
        export DATABASE_URL="postgresql://$DB_USERNAME:$DB_PASSWORD@$DB_HOST:$DB_PORT/$TEST_DB_NAME?schema=public"
        echo "Database connection string constructed for test database: $TEST_DB_NAME"
      - 'npx prisma generate'
      - 'npm run lint'
      - 'mkdir -p ./test-results/junit'

  build:
    commands:
      - 'echo Running test suite...'
      - 'npm run test:ci'

  post_build:
    commands:
      - 'echo Tests completed at `date`'
      - 'echo Checking for test reports...'
      - 'ls -la ./test-results/junit || echo "No test reports found"'

artifacts:
  files:
    - 'junit.xml'
    - 'test-results/**/*'
    - 'coverage/**/*'
  base-directory: '.'
  discard-paths: no

cache:
  paths:
    - 'node_modules/**/*'

env:
  variables:
    CI: 'true'
    JEST_JUNIT_OUTPUT_DIR: './test-results/junit/'
    JEST_JUNIT_OUTPUT_NAME: 'junit.xml'
    JEST_JUNIT_CLASSNAME: '{classname}'
    JEST_JUNIT_TITLE: '{title}'
  secrets-manager:
    DB_HOST: '$DB_SECRETS_ARN:host'
    DB_PORT: '$DB_SECRETS_ARN:port'
    DB_USERNAME: '$DB_SECRETS_ARN:username'
    DB_PASSWORD: '$DB_SECRETS_ARN:password'
    TEST_DB_NAME: '$DB_SECRETS_ARN:test_dbname'
