files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/01_set_env_vars.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      # Get the environment name and application name
      EB_ENV=$(get-config environment -k EnvironmentName)
      APP_PREFIX=$(echo $EB_ENV | sed 's/-dev$\|-staging$\|-prod$//')
      ENV_TYPE=$(echo $EB_ENV | sed 's/^.*-\(dev\|staging\|prod\)$/\1/')

      # Get DATABASE_URL from SSM Parameter Store
      DB_URL_PARAM="/$APP_PREFIX/$ENV_TYPE/database-url"
      echo "Retrieving DATABASE_URL from SSM parameter: $DB_URL_PARAM"
      DATABASE_URL=$(aws ssm get-parameter --name "$DB_URL_PARAM" --with-decryption --query "Parameter.Value" --output text)

      if [ -z "$DATABASE_URL" ]; then
        echo "ERROR: Failed to retrieve DATABASE_URL from SSM parameter store"
        exit 1
      fi

      # Get API_ACCESS_TOKEN from SSM Parameter Store
      API_TOKEN_PARAM="/$APP_PREFIX/$ENV_TYPE/api-access-token"
      echo "Retrieving API_ACCESS_TOKEN from SSM parameter: $API_TOKEN_PARAM"
      API_ACCESS_TOKEN=$(aws ssm get-parameter --name "$API_TOKEN_PARAM" --with-decryption --query "Parameter.Value" --output text)

      if [ -z "$API_ACCESS_TOKEN" ]; then
        echo "WARNING: Failed to retrieve API_ACCESS_TOKEN from SSM parameter store, using fallback value"
        API_ACCESS_TOKEN="api-token-fallback-$(date +%s)" # Fallback with timestamp
      fi

      # Create environment variable file
      EB_APP_ENV_FILE=/opt/elasticbeanstalk/deployment/env
      echo "Setting environment variables in $EB_APP_ENV_FILE"

      # Add or update DATABASE_URL
      grep -q "^DATABASE_URL=" $EB_APP_ENV_FILE && \
        sed -i "s|^DATABASE_URL=.*|DATABASE_URL=$DATABASE_URL|" $EB_APP_ENV_FILE || \
        echo "DATABASE_URL=$DATABASE_URL" >> $EB_APP_ENV_FILE

      # Add or update API_ACCESS_TOKEN
      grep -q "^API_ACCESS_TOKEN=" $EB_APP_ENV_FILE && \
        sed -i "s|^API_ACCESS_TOKEN=.*|API_ACCESS_TOKEN=$API_ACCESS_TOKEN|" $EB_APP_ENV_FILE || \
        echo "API_ACCESS_TOKEN=$API_ACCESS_TOKEN" >> $EB_APP_ENV_FILE

      # Add other required environment variables if they don't exist
      grep -q "^NODE_ENV=" $EB_APP_ENV_FILE || echo "NODE_ENV=$ENV_TYPE" >> $EB_APP_ENV_FILE
      grep -q "^PORT=" $EB_APP_ENV_FILE || echo "PORT=8080" >> $EB_APP_ENV_FILE
      grep -q "^LOG_LEVEL=" $EB_APP_ENV_FILE || echo "LOG_LEVEL=info" >> $EB_APP_ENV_FILE

      echo "Environment variables set successfully"
